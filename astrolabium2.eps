%!PS-Adobe-2.0 EPSF-2.0
%%Title: astrolabium2.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Mon Jun 25 15:59:39 2001
%%For: siglun@gojan (Sigfrid Lundberg)
%%BoundingBox: 0 0 159 166
%%Magnification: 0.2500
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 166 moveto 0 0 lineto 159 0 lineto 159 166 lineto closepath clip newpath
6.0 172.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.01575 0.01575 sc
%
% Fig objects follow
%
7.500 slw
% Ellipse
n 4680 5040 1530 1530 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 210.00 234.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4680 5040 1710 1710 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 5040 1980 1980 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 5040 2340 2340 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 5040 2610 2610 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 5040 2880 2880 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 5040 3330 3330 0 360 DrawEllipse gs col0 s gr

% Polyline
2 slj
0.000 slw
n 630 7110 m 644 7274 l 658 7431 l 673 7579 l 689 7716 l 704 7844 l
 719 7960 l 734 8066 l 748 8161 l 761 8245 l 774 8319 l
 786 8384 l 797 8440 l 808 8487 l 817 8526 l 826 8558 l
 834 8584 l 842 8603 l 849 8618 l 856 8628 l 862 8635 l
 868 8638 l 874 8639 l 879 8638 l 885 8636 l 891 8633 l
 897 8631 l 903 8628 l 910 8627 l 918 8627 l 926 8629 l
 935 8634 l 945 8641 l 956 8652 l 968 8667 l 982 8686 l
 997 8709 l 1013 8737 l 1032 8770 l 1051 8807 l 1073 8850 l
 1097 8897 l 1122 8949 l 1149 9004 l 1177 9063 l 1207 9125 l
 1239 9188 l 1272 9252 l 1305 9315 l 1353 9400 l 1400 9478 l
 1446 9549 l 1489 9611 l 1528 9666 l 1565 9712 l 1597 9751 l
 1625 9782 l 1650 9807 l 1672 9825 l 1690 9839 l 1706 9847 l
 1719 9852 l 1731 9854 l 1741 9853 l 1750 9851 l 1759 9847 l
 1768 9844 l 1777 9840 l 1787 9837 l 1799 9835 l 1813 9835 l
 1830 9837 l 1849 9842 l 1872 9851 l 1899 9862 l 1929 9878 l
 1964 9897 l 2003 9921 l 2046 9948 l 2093 9978 l 2143 10011 l
 2196 10045 l 2250 10080 l 2311 10118 l 2370 10153 l 2424 10186 l
 2473 10214 l 2516 10239 l 2553 10259 l 2584 10276 l 2609 10290 l
 2628 10301 l 2643 10309 l 2654 10314 l 2662 10318 l 2667 10321 l
 2671 10323 l 2674 10324 l 2677 10325 l 2681 10326 l 2687 10327 l
 2695 10330 l 2707 10334 l 2724 10340 l 2745 10347 l 2773 10357 l
 2807 10369 l 2848 10383 l 2896 10400 l 2951 10419 l 3012 10440 l
 3079 10462 l 3150 10485 l 3210 10504 l 3270 10522 l 3329 10540 l
 3385 10557 l 3438 10574 l 3487 10592 l 3532 10609 l 3574 10625 l
 3612 10642 l 3646 10659 l 3677 10676 l 3706 10692 l 3731 10709 l
 3754 10725 l 3775 10741 l 3795 10758 l 3814 10773 l 3833 10789 l
 3851 10804 l 3869 10818 l 3888 10832 l 3909 10844 l 3930 10856 l
 3954 10866 l 3979 10875 l 4007 10882 l 4038 10886 l 4071 10888 l
 4107 10886 l 4146 10882 l 4187 10873 l 4230 10860 l 4275 10842 l
 4321 10818 l 4366 10790 l 4410 10755 l 4447 10719 l 4481 10680 l
 4513 10638 l 4541 10594 l 4567 10549 l 4589 10505 l 4609 10460 l
 4627 10417 l 4642 10374 l 4655 10333 l 4665 10292 l 4675 10254 l
 4682 10216 l 4688 10180 l 4693 10145 l 4697 10110 l 4701 10077 l
 4703 10044 l 4705 10011 l 4706 9979 l 4707 9946 l 4708 9913 l
 4709 9880 l 4709 9846 l 4709 9811 l 4710 9775 l 4710 9737 l
 4710 9698 l 4711 9657 l 4711 9615 l 4711 9571 l 4711 9525 l
 4710 9478 l 4709 9429 l 4708 9379 l 4705 9329 l 4701 9278 l
 4696 9229 l 4689 9181 l 4680 9135 l 4665 9080 l 4646 9032 l
 4626 8992 l 4605 8960 l 4584 8935 l 4564 8917 l 4544 8905 l
 4525 8899 l 4507 8898 l 4491 8900 l 4475 8906 l 4460 8915 l
 4446 8926 l 4432 8938 l 4417 8951 l 4403 8965 l 4388 8979 l
 4372 8992 l 4355 9004 l 4336 9015 l 4315 9025 l 4291 9032 l
 4265 9037 l 4236 9039 l 4204 9039 l 4169 9036 l 4131 9030 l
 4091 9022 l 4048 9012 l 4005 9000 l 3951 8985 l 3901 8970 l
 3855 8957 l 3815 8945 l 3781 8936 l 3753 8928 l 3731 8923 l
 3714 8919 l 3700 8916 l 3690 8915 l 3682 8914 l 3675 8914 l
 3668 8913 l 3660 8912 l 3650 8909 l 3638 8906 l 3622 8900 l
 3601 8891 l 3576 8880 l 3545 8866 l 3508 8848 l 3467 8827 l
 3422 8802 l 3375 8775 l 3329 8746 l 3286 8718 l 3248 8692 l
 3215 8668 l 3187 8647 l 3165 8629 l 3148 8615 l 3135 8603 l
 3125 8593 l 3118 8586 l 3113 8579 l 3109 8572 l 3105 8566 l
 3100 8559 l 3093 8550 l 3085 8539 l 3073 8526 l 3058 8509 l
 3038 8488 l 3014 8463 l 2986 8434 l 2953 8401 l 2917 8364 l
 2880 8325 l 2843 8286 l 2809 8249 l 2777 8215 l 2750 8186 l
 2728 8161 l 2709 8142 l 2694 8126 l 2682 8115 l 2673 8106 l
 2666 8101 l 2660 8096 l 2655 8092 l 2650 8089 l 2645 8084 l
 2639 8078 l 2631 8068 l 2620 8056 l 2608 8039 l 2592 8017 l
 2574 7990 l 2552 7957 l 2528 7919 l 2502 7876 l 2475 7830 l
 2450 7783 l 2426 7738 l 2406 7697 l 2389 7660 l 2374 7629 l
 2363 7603 l 2355 7582 l 2348 7565 l 2343 7552 l 2340 7542 l
 2338 7534 l 2336 7526 l 2335 7519 l 2333 7510 l 2331 7499 l
 2327 7486 l 2323 7468 l 2317 7446 l 2309 7419 l 2300 7385 l
 2289 7346 l 2277 7301 l 2263 7252 l 2250 7200 l 2237 7148 l
 2226 7099 l 2216 7054 l 2208 7015 l 2201 6983 l 2195 6956 l
 2191 6935 l 2187 6919 l 2184 6907 l 2182 6898 l 2180 6891 l
 2179 6885 l 2177 6879 l 2176 6872 l 2175 6863 l 2173 6851 l
 2172 6835 l 2170 6814 l 2168 6787 l 2166 6755 l 2164 6716 l
 2162 6671 l 2161 6622 l 2160 6570 l 2161 6518 l 2162 6469 l
 2164 6424 l 2166 6385 l 2168 6353 l 2169 6326 l 2171 6305 l
 2172 6289 l 2173 6277 l 2174 6268 l 2174 6261 l 2175 6255 l
 2176 6249 l 2177 6242 l 2179 6233 l 2182 6221 l 2185 6205 l
 2190 6184 l 2195 6157 l 2203 6125 l 2212 6086 l 2223 6041 l
 2236 5992 l 2250 5940 l 2264 5892 l 2279 5846 l 2292 5804 l
 2305 5766 l 2316 5733 l 2326 5706 l 2334 5683 l 2340 5664 l
 2345 5650 l 2350 5638 l 2353 5629 l 2356 5621 l 2359 5614 l
 2362 5607 l 2365 5599 l 2369 5590 l 2375 5579 l 2382 5565 l
 2390 5547 l 2401 5526 l 2415 5500 l 2431 5469 l 2449 5434 l
 2471 5395 l 2495 5353 l 2520 5310 l 2548 5264 l 2576 5221 l
 2601 5183 l 2623 5150 l 2643 5122 l 2658 5100 l 2671 5083 l
 2681 5070 l 2689 5060 l 2695 5053 l 2699 5048 l 2704 5044 l
 2708 5040 l 2713 5035 l 2720 5028 l 2729 5020 l 2740 5008 l
 2755 4993 l 2773 4973 l 2796 4949 l 2823 4921 l 2854 4888 l
 2888 4852 l 2925 4815 l 2962 4778 l 2998 4744 l 3031 4713 l
 3059 4686 l 3083 4663 l 3103 4645 l 3118 4630 l 3130 4619 l
 3138 4610 l 3145 4603 l 3150 4598 l 3154 4594 l 3158 4589 l
 3163 4585 l 3170 4579 l 3180 4571 l 3193 4561 l 3210 4548 l
 3232 4533 l 3260 4513 l 3293 4491 l 3331 4466 l 3374 4438 l
 3420 4410 l 3463 4385 l 3505 4361 l 3544 4339 l 3579 4320 l
 3610 4304 l 3636 4291 l 3657 4279 l 3675 4270 l 3689 4263 l
 3700 4257 l 3709 4252 l 3717 4248 l 3724 4245 l 3731 4242 l
 3739 4238 l 3748 4235 l 3760 4230 l 3774 4225 l 3793 4218 l
 3816 4210 l 3843 4201 l 3876 4190 l 3914 4178 l 3956 4166 l
 4002 4153 l 4050 4140 l 4102 4128 l 4151 4117 l 4196 4108 l
 4235 4102 l 4267 4096 l 4294 4092 l 4315 4090 l 4331 4088 l
 4343 4087 l 4352 4087 l 4359 4087 l 4365 4088 l 4371 4088 l
 4378 4089 l 4387 4090 l 4399 4090 l 4415 4091 l 4436 4091 l
 4463 4092 l 4495 4092 l 4534 4092 l 4579 4093 l 4628 4094 l
 4680 4095 l 4732 4097 l 4781 4100 l 4826 4103 l 4865 4106 l
 4898 4108 l 4925 4111 l 4946 4112 l 4962 4114 l 4975 4115 l
 4985 4116 l 4992 4117 l 4999 4118 l 5005 4118 l 5013 4120 l
 5022 4121 l 5035 4124 l 5051 4127 l 5072 4131 l 5098 4136 l
 5130 4143 l 5168 4151 l 5212 4161 l 5260 4172 l 5310 4185 l
 5360 4198 l 5407 4212 l 5450 4224 l 5487 4235 l 5518 4245 l
 5543 4253 l 5563 4259 l 5578 4264 l 5589 4268 l 5598 4271 l
 5604 4273 l 5610 4275 l 5616 4277 l 5622 4280 l 5630 4284 l
 5641 4288 l 5656 4295 l 5675 4304 l 5699 4315 l 5729 4329 l
 5764 4345 l 5804 4364 l 5848 4386 l 5895 4410 l 5941 4435 l
 5985 4458 l 6025 4480 l 6059 4500 l 6088 4516 l 6112 4529 l
 6131 4540 l 6146 4548 l 6158 4553 l 6167 4558 l 6174 4561 l
 6180 4564 l 6186 4567 l 6193 4571 l 6201 4576 l 6212 4583 l
 6226 4593 l 6244 4606 l 6265 4623 l 6292 4644 l 6323 4670 l
 6358 4700 l 6396 4733 l 6435 4770 l 6474 4808 l 6509 4844 l
 6542 4878 l 6569 4908 l 6592 4933 l 6611 4954 l 6626 4971 l
 6637 4984 l 6645 4994 l 6651 5002 l 6656 5008 l 6660 5014 l
 6664 5019 l 6668 5026 l 6674 5035 l 6681 5046 l 6690 5061 l
 6703 5081 l 6718 5106 l 6737 5136 l 6759 5172 l 6784 5214 l
 6812 5260 l 6840 5310 l 6865 5357 l 6889 5402 l 6911 5444 l
 6929 5482 l 6945 5515 l 6959 5544 l 6970 5568 l 6978 5587 l
 6985 5603 l 6991 5616 l 6995 5626 l 6998 5635 l 7001 5644 l
 7004 5652 l 7007 5661 l 7010 5672 l 7015 5685 l 7020 5701 l
 7026 5721 l 7034 5745 l 7044 5774 l 7055 5808 l 7068 5847 l
 7081 5890 l 7096 5937 l 7110 5985 l 7124 6037 l 7137 6085 l
 7148 6128 l 7157 6166 l 7165 6196 l 7170 6221 l 7175 6239 l
 7178 6253 l 7181 6263 l 7183 6269 l 7184 6274 l 7185 6278 l
 7186 6281 l 7186 6286 l 7187 6292 l 7188 6302 l 7189 6316 l
 7191 6334 l 7192 6359 l 7194 6389 l 7196 6427 l 7198 6470 l
 7199 6518 l 7200 6570 l 7200 6618 l 7198 6665 l 7197 6708 l
 7195 6747 l 7193 6781 l 7192 6809 l 7190 6833 l 7189 6853 l
 7188 6868 l 7187 6881 l 7186 6891 l 7186 6900 l 7185 6908 l
 7184 6915 l 7183 6924 l 7181 6934 l 7179 6947 l 7176 6962 l
 7173 6982 l 7168 7006 l 7162 7034 l 7154 7068 l 7146 7107 l
 7135 7150 l 7123 7197 l 7110 7245 l 7095 7297 l 7079 7345 l
 7065 7389 l 7051 7426 l 7040 7458 l 7030 7483 l 7023 7503 l
 7016 7518 l 7011 7529 l 7008 7538 l 7004 7544 l 7001 7549 l
 6998 7554 l 6994 7560 l 6990 7567 l 6983 7578 l 6975 7592 l
 6965 7611 l 6951 7635 l 6935 7664 l 6915 7699 l 6893 7739 l
 6867 7783 l 6840 7830 l 6812 7876 l 6784 7920 l 6759 7960 l
 6737 7994 l 6718 8023 l 6703 8047 l 6690 8066 l 6681 8081 l
 6674 8093 l 6668 8102 l 6664 8109 l 6660 8115 l 6656 8121 l
 6651 8128 l 6645 8136 l 6637 8147 l 6626 8161 l 6611 8179 l
 6592 8200 l 6569 8227 l 6542 8258 l 6509 8293 l 6474 8331 l
 6435 8370 l 6396 8409 l 6358 8444 l 6323 8477 l 6292 8504 l
 6265 8527 l 6244 8546 l 6226 8561 l 6212 8572 l 6201 8580 l
 6193 8586 l 6186 8591 l 6180 8595 l 6174 8599 l 6167 8603 l
 6158 8609 l 6146 8616 l 6131 8625 l 6112 8638 l 6088 8653 l
 6059 8672 l 6025 8694 l 5985 8719 l 5941 8747 l 5895 8775 l
 5848 8802 l 5804 8828 l 5764 8850 l 5729 8870 l 5699 8886 l
 5675 8900 l 5656 8910 l 5641 8918 l 5630 8925 l 5622 8929 l
 5616 8933 l 5610 8936 l 5604 8939 l 5598 8943 l 5589 8946 l
 5578 8951 l 5563 8958 l 5543 8965 l 5518 8975 l 5487 8986 l
 5450 9000 l 5407 9014 l 5360 9030 l 5310 9045 l 5267 9057 l
 5225 9067 l 5185 9075 l 5148 9079 l 5115 9080 l 5085 9078 l
 5058 9073 l 5035 9064 l 5014 9053 l 4996 9041 l 4980 9026 l
 4965 9010 l 4952 8994 l 4939 8977 l 4926 8962 l 4914 8947 l
 4900 8934 l 4886 8923 l 4871 8916 l 4854 8913 l 4836 8915 l
 4816 8923 l 4794 8938 l 4771 8960 l 4748 8990 l 4724 9030 l
 4701 9078 l 4680 9135 l 4668 9177 l 4657 9222 l 4648 9269 l
 4639 9316 l 4631 9364 l 4623 9412 l 4615 9459 l 4608 9505 l
 4601 9550 l 4594 9594 l 4586 9637 l 4579 9678 l 4571 9718 l
 4563 9756 l 4555 9794 l 4547 9830 l 4539 9865 l 4531 9900 l
 4523 9934 l 4515 9968 l 4507 10001 l 4500 10034 l 4494 10068 l
 4488 10101 l 4484 10135 l 4480 10169 l 4477 10204 l 4476 10240 l
 4477 10276 l 4480 10313 l 4485 10351 l 4493 10390 l 4503 10429 l
 4517 10469 l 4534 10509 l 4555 10549 l 4580 10588 l 4609 10626 l
 4642 10663 l 4680 10697 l 4723 10728 l 4770 10755 l 4819 10776 l
 4870 10793 l 4923 10806 l 4977 10816 l 5030 10822 l 5082 10826 l
 5133 10827 l 5181 10826 l 5228 10823 l 5272 10819 l 5314 10813 l
 5353 10806 l 5390 10799 l 5424 10790 l 5457 10781 l 5487 10771 l
 5517 10760 l 5544 10750 l 5571 10738 l 5597 10727 l 5622 10715 l
 5648 10702 l 5673 10690 l 5699 10676 l 5726 10662 l 5754 10648 l
 5784 10633 l 5816 10617 l 5850 10600 l 5886 10582 l 5926 10563 l
 5968 10543 l 6014 10522 l 6064 10499 l 6118 10474 l 6175 10448 l
 6236 10420 l 6302 10390 l 6370 10358 l 6442 10324 l 6517 10289 l
 6594 10251 l 6672 10211 l 6750 10170 l 6831 10125 l 6909 10080 l
 6984 10036 l 7054 9992 l 7120 9950 l 7181 9910 l 7237 9873 l
 7288 9838 l 7334 9806 l 7375 9777 l 7411 9750 l 7443 9726 l
 7471 9704 l 7495 9684 l 7517 9666 l 7535 9650 l 7551 9636 l
 7566 9622 l 7578 9609 l 7590 9597 l 7601 9585 l 7612 9573 l
 7623 9560 l 7634 9547 l 7647 9533 l 7660 9517 l 7675 9500 l
 7692 9481 l 7712 9459 l 7733 9435 l 7758 9408 l 7785 9378 l
 7815 9345 l 7848 9309 l 7884 9269 l 7923 9226 l 7964 9179 l
 8008 9130 l 8053 9077 l 8099 9023 l 8145 8967 l 8190 8910 l
 8242 8840 l 8290 8773 l 8333 8711 l 8371 8653 l 8404 8602 l
 8432 8557 l 8455 8518 l 8473 8486 l 8488 8461 l 8499 8440 l
 8506 8425 l 8511 8414 l 8513 8407 l 8514 8403 l 8513 8401 l
 8511 8400 l 8509 8400 l 8506 8400 l 8503 8399 l 8500 8396 l
 8498 8390 l 8497 8381 l 8496 8368 l 8498 8350 l 8500 8326 l
 8505 8296 l 8511 8258 l 8519 8213 l 8529 8160 l 8541 8099 l
 8553 8030 l 8567 7954 l 8581 7872 l 8595 7785 l 8605 7713 l
 8615 7640 l 8623 7569 l 8631 7499 l 8637 7433 l 8643 7371 l
 8647 7313 l 8651 7259 l 8654 7209 l 8657 7165 l 8658 7124 l
 8659 7088 l 8660 7055 l 8660 7026 l 8659 7000 l 8659 6977 l
 8658 6956 l 8656 6936 l 8655 6919 l 8653 6902 l 8651 6885 l
 8649 6868 l 8647 6851 l 8646 6833 l 8644 6813 l 8642 6791 l
 8640 6766 l 8639 6739 l 8637 6708 l 8636 6673 l 8635 6634 l
 8635 6591 l 8634 6542 l 8634 6488 l 8634 6430 l 8634 6365 l
 8635 6296 l 8636 6222 l 8637 6145 l 8638 6063 l 8639 5980 l
 8640 5895 l 8641 5807 l 8642 5721 l 8643 5639 l 8643 5563 l
 8644 5493 l 8644 5430 l 8645 5374 l 8645 5325 l 8645 5284 l
 8645 5249 l 8644 5221 l 8644 5198 l 8644 5181 l 8643 5169 l
 8643 5161 l 8642 5156 l 8642 5154 l 8641 5153 l 8641 5155 l
 8640 5156 l 8639 5158 l 8638 5157 l 8638 5153 l 8637 5146 l
 8637 5135 l 8636 5120 l 8636 5098 l 8636 5071 l 8635 5036 l
 8635 4994 l 8635 4943 l 8635 4884 l 8636 4816 l 8636 4739 l
 8637 4652 l 8637 4558 l 8638 4455 l 8639 4345 l 8640 4230 l
 8641 4151 l 8642 4072 l 8644 3992 l 8648 3913 l 8652 3835 l
 8659 3759 l 8667 3684 l 8677 3611 l 8689 3540 l 8703 3472 l
 8720 3407 l 8738 3344 l 8759 3284 l 8781 3226 l 8806 3171 l
 8833 3119 l 8861 3069 l 8891 3022 l 8923 2977 l 8956 2933 l
 8991 2892 l 9026 2853 l 9063 2815 l 9100 2779 l 9138 2743 l
 9177 2709 l 9215 2676 l 9254 2644 l 9292 2612 l 9330 2580 l
 9367 2548 l 9404 2517 l 9439 2485 l 9473 2453 l 9505 2420 l
 9535 2387 l 9563 2352 l 9588 2317 l 9610 2280 l 9629 2243 l
 9644 2203 l 9655 2163 l 9661 2120 l 9663 2076 l 9659 2030 l
 9649 1983 l 9634 1934 l 9611 1883 l 9581 1830 l 9544 1776 l
 9499 1721 l 9446 1664 l 9383 1607 l 9312 1549 l 9231 1490 l
 9141 1433 l 9041 1376 l 8932 1320 l 8813 1266 l 8685 1215 l
 8593 1182 l 8496 1151 l 8397 1121 l 8295 1092 l 8192 1065 l
 8086 1039 l 7979 1014 l 7872 990 l 7764 968 l 7656 946 l
 7548 926 l 7440 906 l 7333 887 l 7227 869 l 7122 851 l
 7018 835 l 6916 818 l 6814 803 l 6715 787 l 6617 773 l
 6520 758 l 6426 744 l 6333 731 l 6242 717 l 6152 704 l
 6064 692 l 5978 679 l 5893 667 l 5810 655 l 5728 643 l
 5647 631 l 5568 620 l 5490 609 l 5414 598 l 5338 587 l
 5263 576 l 5189 566 l 5116 555 l 5044 545 l 4972 535 l
 4900 526 l 4829 516 l 4758 507 l 4687 499 l 4617 490 l
 4546 482 l 4475 475 l 4403 468 l 4331 461 l 4259 455 l
 4186 449 l 4112 444 l 4037 440 l 3961 436 l 3884 433 l
 3806 431 l 3727 430 l 3647 429 l 3565 430 l 3481 432 l
 3396 435 l 3310 439 l 3222 444 l 3132 451 l 3040 459 l
 2947 469 l 2852 480 l 2755 494 l 2657 509 l 2557 525 l
 2456 544 l 2353 565 l 2249 589 l 2143 614 l 2037 642 l
 1929 673 l 1821 706 l 1712 742 l 1604 780 l 1495 822 l
 1387 866 l 1279 913 l 1173 963 l 1068 1016 l 966 1073 l
 866 1132 l 768 1195 l 675 1260 l 574 1337 l 479 1418 l
 389 1501 l 305 1586 l 227 1673 l 154 1761 l 87 1849 l
 25 1937 l -32 2025 l -83 2113 l -129 2200 l -170 2285 l
 -206 2370 l -238 2453 l -265 2534 l -288 2614 l -307 2692 l
 -322 2768 l -333 2842 l -341 2914 l -345 2984 l -347 3052 l
 -346 3119 l -342 3184 l -335 3247 l -327 3308 l -316 3368 l
 -303 3426 l -288 3483 l -272 3539 l -254 3593 l -234 3647 l
 -214 3700 l -192 3752 l -169 3803 l -146 3854 l -122 3904 l
 -97 3955 l -71 4005 l -45 4055 l -19 4106 l 7 4157 l
 34 4209 l 60 4261 l 87 4314 l 113 4368 l 140 4424 l
 166 4480 l 191 4538 l 216 4598 l 241 4659 l 265 4722 l
 289 4787 l 312 4854 l 334 4924 l 356 4995 l 377 5069 l
 396 5145 l 416 5224 l 434 5306 l 451 5390 l 467 5476 l
 483 5566 l 497 5657 l 511 5752 l 524 5848 l 536 5947 l
 547 6048 l 557 6151 l 566 6255 l 575 6361 l 584 6468 l
 592 6576 l 600 6684 l 607 6792 l 615 6900 l 622 7006 l

 cp gs col7 1.00 shd ef gr 
7.500 slw
% Ellipse
n 4680 6615 3872 3872 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4664 6573 1510 1510 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4664 6573 1004 1007 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4664 6573 2012 2012 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 6570 542 542 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4680 6592 2498 2498 0 360 DrawEllipse gs col0 s gr

% Polyline
0 slj
n 4661 9341 m
 4664 6573 l gs col0 s gr 
% Polyline
n 5377 9248 m
 4664 6573 l gs col0 s gr 
% Polyline
n 6047 8973 m
 4664 6573 l gs col0 s gr 
% Polyline
n 6621 8533 m
 4664 6573 l gs col0 s gr 
% Polyline
n 7058 7958 m
 4664 6573 l gs col0 s gr 
% Polyline
n 7339 7292 m
 4664 6573 l gs col0 s gr 
% Polyline
n 7339 5861 m
 4664 6573 l gs col0 s gr 
% Polyline
n 7064 5190 m
 4664 6573 l gs col0 s gr 
% Polyline
n 6624 4617 m
 4664 6573 l gs col0 s gr 
% Polyline
n 6050 4177 m
 4664 6573 l gs col0 s gr 
% Polyline
n 3949 3899 m
 4664 6573 l gs col0 s gr 
% Polyline
n 3282 4174 m
 4664 6573 l gs col0 s gr 
% Polyline
n 1896 6571 m
 4664 6573 l gs col0 s gr 
% Polyline
n 3944 9242 m
 4664 6569 l gs col0 s gr 
% Polyline
n 3278 8960 m
 4665 6565 l gs col0 s gr 
% Polyline
n 2707 8516 m
 4667 6561 l gs col0 s gr 
% Polyline
n 2271 7939 m
 4670 6558 l gs col0 s gr 
% Polyline
n 1999 7269 m
 4673 6556 l gs col0 s gr 
% Polyline
n 5380 3895 m
 4664 6569 l gs col0 s gr 
% Polyline
n 4665 3801 m
 4664 6569 l gs col0 s gr 
% Polyline
n 1994 5855 m
 4667 6573 l gs col0 s gr 
% Polyline
n 2274 5189 m
 4670 6574 l gs col0 s gr 
% Polyline
n 2717 4618 m
 4673 6576 l gs col0 s gr 
% Polyline
n 7432 6576 m
 4664 6573 l gs col0 s gr 
/Times-Roman ff 495.00 scf sf
1530 5895 m
gs 1 -1 sc (VII) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
7891 7650 m
gs 1 -1 sc (VII) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
7556 8424 m
gs 1 -1 sc (VIII) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
7003 9061 m
gs 1 -1 sc (IX) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
6320 9558 m
gs 1 -1 sc (X) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
5574 9920 m
gs 1 -1 sc (XI) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
4702 10028 m
gs 1 -1 sc (XII) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
3800 9913 m
gs 1 -1 sc (I) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
3075 9571 m
gs 1 -1 sc (II) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
2432 9092 m
gs 1 -1 sc (III) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
1879 8451 m
gs 1 -1 sc (IV) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
1569 7557 m
gs 1 -1 sc (V) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
1414 6710 m
gs 1 -1 sc (VI) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
1821 5209 m
gs 1 -1 sc (VIII) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
2287 4541 m
gs 1 -1 sc (IX) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
2977 4013 m
gs 1 -1 sc (X) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
3754 3652 m
gs 1 -1 sc (XI) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
4661 3502 m
gs 1 -1 sc (XII) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
5515 3647 m
gs 1 -1 sc (I) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
6240 3935 m
gs 1 -1 sc (II) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
6960 4456 m
gs 1 -1 sc (III) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
7500 5162 m
gs 1 -1 sc (IV) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
7765 6021 m
gs 1 -1 sc (V) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 495.00 scf sf
7819 6772 m
gs 1 -1 sc (VI) dup sw pop 2 div neg 0 rm  col0 sh gr
$F2psEnd
rs
end
