<?xml version='1.0' encoding="ISO-8859-1" ?>
<!DOCTYPE xsl:transform [
<!ENTITY mdash  "\(em" >
<!ENTITY ndash  "\(en" >
<!ENTITY rsquo "'">
<!ENTITY lsquo "'">
<!ENTITY sp " ">
<!ENTITY rdquo "\(rq">
<!ENTITY ldquo "\(rq">
<!ENTITY approx "\(~~">
]>
<xsl:transform  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

<!--
	Reformats a TEI.2 document to troff
	$Id: tei_to_roff.xsl,v 1.7 2002/07/11 14:02:35 siglun Exp siglun $
-->

<xsl:output omit-xml-declaration="yes"
	    method="text"
	    media-type="application/x-troff-ms"
	    indent = "no"
	    encoding="ISO-8859-1" 	
    />

<xsl:strip-space elements = "*" /> 

<xsl:template match="/" >
<xsl:apply-templates select="TEI.2" />
</xsl:template>

<xsl:template match="TEI.2" >.\" This is autogenerated using XSLT. Do not edit!
.so tmac.bok
<xsl:apply-templates />
</xsl:template>

<xsl:template match="teiHeader" />

<xsl:template match="titlePage" >
.ds book "<xsl:value-of select="titlePart" />
</xsl:template>

<!--xsl:template match="titlePage" >
.LP
.ds book "<xsl:value-of select="titlePart" />
.CD
.sp 5.0c
\s18<xsl:value-of select="titlePart" />
.sp 3.0c
\s14<xsl:value-of select="docAuthor" />
.DE
.bp 1
</xsl:template-->

<xsl:template match='div1'>
.\" Matching div1
<xsl:if test="@n&gt;01">
.bp
</xsl:if>
.ds RCSID yes
<xsl:apply-templates />
.br
.di ornament
.LP
.PSPIC ornament.epsi 2.0c 
.di
.if \n[dn]&lt;\n[.t] \{\
.LP
.PSPIC ornament.epsi 2.0c 
.\}
.rm ornament
</xsl:template>

<xsl:template match='div2'>
.\" Matching div2
<xsl:if test="@n&gt;01">
.LP
.sp 0.2c
.ce 1000
* \d*\u *
.ce 0
.sp 0.2c
</xsl:if>
<xsl:apply-templates />
</xsl:template>

<xsl:template match='head' >
.ds chapter "<xsl:value-of select="." />
.LP
.CHAPTER "<xsl:apply-templates />
</xsl:template>

<xsl:template match='seg'><xsl:choose>
<xsl:when test="@rend='dropcap'">
.dropcap \f(YR\d<xsl:apply-templates />\u\fP 4
<!--.dropcap <xsl:apply-templates /> 3-->
</xsl:when>
<xsl:when test="@rend='capitals'">
.initial "<xsl:apply-templates />"
</xsl:when>
<xsl:otherwise><xsl:apply-templates /></xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match='lg'>
<xsl:text>
.ID
</xsl:text><xsl:apply-templates /><xsl:text>
.DE
</xsl:text>
</xsl:template>

<xsl:template match='lg/l'>
<xsl:text>
</xsl:text>\fI<xsl:apply-templates />\fR<xsl:text>
</xsl:text>
</xsl:template>

<xsl:template match='sp/p'>
<xsl:text>
</xsl:text><xsl:apply-templates /> 
</xsl:template>

<xsl:template match='p'>
.\" Matching paragraph
<xsl:choose>
<xsl:when test="@rend='nobreak'">
<xsl:apply-templates /> 
</xsl:when>
<xsl:when test="@rend='noindent'">
.LP
<xsl:apply-templates /> 
</xsl:when>
<xsl:when test="@rend='box'">
.sp 0.2v
.B1
.SMALL
<xsl:apply-templates />
.B2
.sp 0.2v
</xsl:when>
<xsl:when test="@rend='script'">
.QP
.\"na
.ps 20
.vs 22
\f[calligra]<xsl:apply-templates />\fR
.LP
.\"ad
</xsl:when>
<xsl:when test="@rend='fraktur'">
.sp 0.2v
.QP
\f[FFR]<xsl:apply-templates />\fR
</xsl:when>
<xsl:when test="name(..)='quote'">
.IP
\fI<xsl:apply-templates />\fR
</xsl:when>
<xsl:otherwise>
.PP
<xsl:apply-templates /> 
</xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match='quote'>
<xsl:apply-templates />
</xsl:template>

<!-- Lists -->
<xsl:template match='list'>
.\" definition list
<xsl:apply-templates /> 
</xsl:template>

<xsl:template match='item'>
.\" A list item
.IP \*[BULLET]
<xsl:apply-templates /> 
</xsl:template>

<xsl:template match='sp'>
.XP
<xsl:for-each select="speaker|stage">
<xsl:choose>
<xsl:when test="name(.)='speaker'">
.smallcaps
<xsl:apply-templates /><xsl:if test="position() = last()">:</xsl:if>
./smallcaps
</xsl:when>
<xsl:when test="name(.)='stage'">
(\fI<xsl:apply-templates />\fR\/)<xsl:if test="position() = last()">:</xsl:if>
</xsl:when>
</xsl:choose>
</xsl:for-each>
<xsl:apply-templates select="p"/>
</xsl:template>

<xsl:template match='div/stage|div1/stage|div2/stage'>
.sp 0.2v
.PP
\fI<xsl:apply-templates />\fR
.sp 0.2v
</xsl:template>

<xsl:template match='sp/stage|p/stage'>
(\fI<xsl:apply-templates />\fR\/)
</xsl:template>

<xsl:template match='speaker'>
.initial "<xsl:apply-templates />&sp;"
</xsl:template>

<xsl:template match='l'>
<xsl:apply-templates />
.br
</xsl:template>

<xsl:template match='emph'>\fI<xsl:apply-templates />\fR</xsl:template>

<xsl:template match='hi'><xsl:choose>
<xsl:when test="@rend='bold'">\fB<xsl:apply-templates />\fR</xsl:when>
<xsl:when test="@rend='italics'">\fI<xsl:apply-templates />\fR</xsl:when>
<xsl:when test="@rend='bold-italics'">\f(BI<xsl:apply-templates />\f(BR</xsl:when>
</xsl:choose>
</xsl:template>

<xsl:template match='q/q'><xsl:text>
</xsl:text>&lsquo;<xsl:apply-templates />&rsquo;</xsl:template>

<xsl:template match='q'><xsl:text>
</xsl:text>&ldquo;<xsl:apply-templates />&rdquo;</xsl:template>

<xsl:template match="note">
<xsl:choose>
<xsl:when test="@place='inline'">
<xsl:apply-templates/>
</xsl:when>
<xsl:otherwise>\**
.FS
<xsl:apply-templates/>
.FE
</xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template match="title">
<xsl:choose>
<xsl:when test="@level='m'">
\fI<xsl:apply-templates/>\fR
</xsl:when>
<xsl:otherwise>
<xsl:apply-templates/>
</xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match='figure'>
.\" An eps image.
.KF
.PSPIC <xsl:value-of select="unparsed-entity-uri(@entity)" /> 8.0c
.QP
.SMALL
\fI<xsl:value-of select="./head" />\fP
.sp 1.0c
.KE
</xsl:template>

  <xsl:template match="mdash">&mdash;</xsl:template>
  <xsl:template match="ndash">&ndash;</xsl:template>
  <xsl:template match="approx">&approx;</xsl:template>

  <xsl:template match="rsquo">&rsquo;</xsl:template>
  <xsl:template match="lsquo">&lsquo;</xsl:template>
  <xsl:template match="rdquo">&rdquo;</xsl:template>
  <xsl:template match="ldquo">&ldquo;</xsl:template>

<!--

	$Log: tei_to_roff.xsl,v $
	Revision 1.7  2002/07/11 14:02:35  siglun
	Added support for poetry

	Revision 1.6  2002/06/19 14:25:45  siglun
	Ändrat lite, definierat fraktur

	Revision 1.5  2002/06/10 20:15:32  siglun
	Fixat double quote

	Revision 1.4  2002/05/21 06:56:50  siglun
	Lagt till stöd för dramatiska former, dvs dialogformat så som
	de brukar användas i tryckt dramatik.

	Revision 1.3  2002/03/24 09:42:08  siglun
	moved stuff to tmac.bok, in order to make the translation more generic

	Revision 1.2  2002/02/03 21:38:49  siglun
	Fixat så att div2 tolkas som en centrerad asterisk, om det inte
	är den första sektionen i kapitlet.

	Revision 1.1  2001/11/20 20:47:35  siglun
	Initial revision


-->

</xsl:transform>


